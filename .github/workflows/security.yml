name: 🔐 Security Scanning

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# ⚠️  IMPORTANT: ADVANCED CODEQL SETUP - REQUIRES REPOSITORY CONFIGURATION
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#
# This workflow uses ADVANCED CodeQL configuration for comprehensive security scanning.
#
# 🚨 IF YOU SEE THIS ERROR:
# "CodeQL analyses from advanced configurations cannot be processed when the default setup is enabled"
#
# This is NOT a code bug - it's a repository settings conflict!
#
# 🔧 SOLUTION (2-minute fix):
# 1. Go to: https://github.com/GizzZmo/Security-Sentinel/settings/security_analysis
# 2. Find "Code scanning" → "Default setup" (will show as Active/Enabled)
# 3. Click "..." menu → Select "Remove" or "Disable"
# 4. Confirm and re-run this workflow
#
# 📖 DOCUMENTATION:
# - Quick Fix: .github/CODEQL_ERROR_HELP.md (4-step guide)
# - Detailed: .github/CODEQL_QUICK_FIX.md (comprehensive troubleshooting)
# - Full Setup: .github/CODEQL_SETUP.md (complete documentation)
#
# ✅ WHY THIS ADVANCED CONFIGURATION IS BETTER:
# - Multi-language analysis (JavaScript + C++ in parallel)
# - Custom C++ build with CMake integration for accurate analysis
# - Matrix strategy for comprehensive coverage
# - Better integration with security workflow
# - Full control over analysis parameters
#
# The workflow configuration below is correct - only repository settings need adjustment.
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly security scans on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  dependency-scan:
    name: 📦 Dependency Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🔍 Run npm audit
      run: |
        echo "### NPM Security Audit 📊" >> $GITHUB_STEP_SUMMARY
        npm audit --audit-level moderate --json > audit-report.json || true
        
        # Parse and display results
        if [ -s audit-report.json ]; then
          # Basic parsing without jq for compatibility
          vulnerabilities=$(grep -o '"vulnerabilities":{[^}]*}' audit-report.json | head -1 || echo "Unable to parse vulnerabilities")
          echo "**Vulnerabilities found:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "$vulnerabilities" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        else
          echo "✅ No vulnerabilities found!" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: 📤 Upload audit report
      uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08
      with:
        name: security-audit-report
        path: audit-report.json
        retention-days: 30
      if: always()

  codeql-analysis:
    name: 🔍 CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    # ⚠️  ADVANCED CODEQL CONFIGURATION - REPOSITORY SETTINGS REQUIRED
    # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    # 
    # 🚨 IF YOU SEE THIS ERROR:
    # "CodeQL analyses from advanced configurations cannot be processed when the default setup is enabled"
    # 
    # 🔧 SOLUTION (Required - Takes 2 minutes):
    # 
    #    1. Go to: https://github.com/GizzZmo/Security-Sentinel/settings/security_analysis
    #    2. Find "Code scanning" section
    #    3. Look for "Default setup" - it will show as "Active" or "Enabled"
    #    4. Click the "..." menu or "Configure" button
    #    5. Select "Remove" or "Disable"
    #    6. Confirm the change
    #    7. Re-run this workflow
    # 
    # 📚 DOCUMENTATION:
    #    - Quick Fix Guide: .github/CODEQL_QUICK_FIX.md
    #    - Detailed Setup: .github/CODEQL_SETUP.md
    #    - README Troubleshooting: README.md (search "CodeQL")
    # 
    # ✅ WHY USE THIS ADVANCED CONFIGURATION:
    #    - ✓ Multi-language analysis (JavaScript + C++)
    #    - ✓ Custom C++ build with CMake integration
    #    - ✓ Matrix strategy for comprehensive coverage
    #    - ✓ Better integration with security workflow
    #    - ✓ More control over analysis parameters
    # 
    # ⚡ THIS IS NOT A CODE BUG - It's a repository configuration conflict
    #    The workflow file is correct. Only repository settings need adjustment.
    # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript', 'cpp']
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
    
    - name: ℹ️ Configuration Info
      run: |
        echo "## 🔍 CodeQL Configuration Info" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Mode:** Advanced Configuration with Matrix Strategy" >> $GITHUB_STEP_SUMMARY
        echo "**Language:** ${{ matrix.language }}" >> $GITHUB_STEP_SUMMARY
        echo "**Build:** ${{ matrix.language == 'cpp' && 'Custom CMake build' || 'Auto-build' }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ⚠️ Common Issue Alert" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "If this job fails with: **'CodeQL analyses from advanced configurations cannot be processed when the default setup is enabled'**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Root Cause:** GitHub's default Code Scanning setup is conflicting with this advanced configuration." >> $GITHUB_STEP_SUMMARY
        echo "Both cannot be enabled simultaneously - you must choose one." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Quick Fix (2 minutes):**" >> $GITHUB_STEP_SUMMARY
        echo "1. Visit: https://github.com/${{ github.repository }}/settings/security_analysis" >> $GITHUB_STEP_SUMMARY
        echo "2. Find 'Code scanning' → 'Default setup' (shows as Active/Enabled)" >> $GITHUB_STEP_SUMMARY
        echo "3. Click the '...' menu → Select 'Remove' or 'Disable'" >> $GITHUB_STEP_SUMMARY
        echo "4. Confirm the change" >> $GITHUB_STEP_SUMMARY
        echo "5. Re-run this workflow" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Why keep this advanced setup?**" >> $GITHUB_STEP_SUMMARY
        echo "✓ Multi-language analysis (JavaScript + C++)" >> $GITHUB_STEP_SUMMARY
        echo "✓ Custom C++ build with CMake integration" >> $GITHUB_STEP_SUMMARY
        echo "✓ Better control over analysis parameters" >> $GITHUB_STEP_SUMMARY
        echo "✓ Integration with comprehensive security workflow" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "📖 **Detailed Guides:**" >> $GITHUB_STEP_SUMMARY
        echo "- [Quick Fix](.github/CODEQL_ERROR_HELP.md) - Ultra-quick 4-step guide" >> $GITHUB_STEP_SUMMARY
        echo "- [Detailed Troubleshooting](.github/CODEQL_QUICK_FIX.md) - Comprehensive solution" >> $GITHUB_STEP_SUMMARY
        echo "- [Complete Setup Guide](.github/CODEQL_SETUP.md) - Full documentation" >> $GITHUB_STEP_SUMMARY
      
    - name: 🔍 Initialize CodeQL
      uses: github/codeql-action/init@64d10c13136e1c5bce3e5fbde8d4906eeaafc885
      with:
        languages: ${{ matrix.language }}
        
    - name: 🔨 Auto-build
      uses: github/codeql-action/autobuild@64d10c13136e1c5bce3e5fbde8d4906eeaafc885
      if: matrix.language == 'javascript'
      
    - name: 🔨 Manual build for C++
      if: matrix.language == 'cpp'
      run: |
        # Install build dependencies for C++ analysis
        sudo apt-get update
        sudo apt-get install -y cmake build-essential
        
        # Configure and build
        mkdir -p build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Debug
        make -j$(nproc)
        
        # Verify the build was successful
        if [ -f "bin/SecuritySentinel" ]; then
          echo "✅ C++ build successful"
          ls -la bin/
        else
          echo "❌ C++ build failed - executable not found"
          exit 1
        fi
        
    - name: 🔍 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@64d10c13136e1c5bce3e5fbde8d4906eeaafc885
      with:
        category: "/language:${{ matrix.language }}"
        upload: true
        # SARIF results are automatically uploaded to GitHub Security tab
        # Results will be visible in: Repository → Security → Code scanning alerts

  secret-scan:
    name: 🔒 Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      with:
        fetch-depth: 0  # Full history for better secret detection
        
    - name: 🔍 Run GitLeaks
      uses: gitleaks/gitleaks-action@ff98106e4c7b2bc287b24eaf42907196329070c7
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 🔍 Run TruffleHog
      uses: trufflesecurity/trufflehog@682eda677ac970a4d88b82d3cf2a4c681a5a1bd0
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified
      continue-on-error: true

  license-scan:
    name: 📄 License Compliance Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 📄 Check licenses
      run: |
        npx license-checker --summary > license-summary.txt
        echo "### License Summary 📄" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        cat license-summary.txt >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        
    - name: 📤 Upload license report
      uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08
      with:
        name: license-report
        path: license-summary.txt
        retention-days: 30

  security-summary:
    name: 📊 Security Summary
    runs-on: ubuntu-latest
    needs: [dependency-scan, codeql-analysis, secret-scan, license-scan]
    if: always()
    
    steps:
    - name: 📊 Generate Security Report
      run: |
        echo "# 🔐 Security Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Scan Type | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| 📦 Dependency Scan | ${{ needs.dependency-scan.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| 🔍 CodeQL Analysis | ${{ needs.codeql-analysis.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| 🔒 Secret Scan | ${{ needs.secret-scan.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| 📄 License Scan | ${{ needs.license-scan.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🔗 **Action:** Review the Security tab for detailed findings" >> $GITHUB_STEP_SUMMARY